name: "CI/CD"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  NODE_VERSION: "18.x"

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  buildRust:
    uses: ocni-dtu/epdx/.github/workflows/build_rust.yaml@main

  releaseDocs:
    if: github.event_name != 'pull_request'
    uses: ocni-dtu/epdx/.github/workflows/docs.yaml@main
    needs: buildRust

  buildJS:
    uses: ocni-dtu/epdx/.github/workflows/build_js.yaml@main
    needs: buildRust

  buildPython:
    needs:
      - buildRust
      - releaseDocs
    uses: ocni-dtu/epdx/.github/workflows/build_python.yaml@main

  createRelease:
    if: github.event_name != 'pull_request'
    uses: ocni-dtu/epdx/.github/workflows/create_release.yaml@main
    needs:
        - buildRust
        - buildJS
        - buildPython
    secrets:
      cargo_token: ${{ secrets.CARGO_TOKEN }}

  publishJS:
    name: Publish NPM Package
    uses: ocni-dtu/epdx/.github/workflows/publish_js.yaml@main
    if: github.event_name != 'pull_request'
    needs: createRelease
    secrets:
      npm_token: ${{ secrets.NPM_TOKEN }}

  publishPy:
    name: Publish PyPI Package
    uses: ocni-dtu/epdx/.github/workflows/publish_python.yaml@main
    if: github.event_name != 'pull_request'
    needs:
      - createRelease
      - releaseDocs
    secrets:
      pypi_token: ${{ secrets.PYPI_TOKEN }}